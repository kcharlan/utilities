server {
  listen 80;
  server_name _;

  # Static files served directly by nginx
  root /usr/share/nginx/html;
  index index.html;

  # Cache common assets
  location ~* \.(?:css|js|jpg|jpeg|png|gif|svg|ico|woff2?)$ {
    expires 7d;
    add_header Cache-Control "public, max-age=604800";
    try_files $uri =404;
  }

  # EXACT "/" -> prefer static index.html, fall back to dynamic file browser
  location = / {
    try_files /index.html @dynamic_index;
  }

  # Try static file first; if missing, fall back to dynamic index
  location / {
    try_files $uri @dynamic_index;
  }

  # Named location fallback -> dynamic index (NO URI part allowed)
  location @dynamic_index {
    proxy_pass http://index:3000;         # no trailing slash
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  # Python backend (FastAPI) proxied under /api/py/
  location /api/py/ {
    proxy_pass http://app_py:80;   # was :8000
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_read_timeout 60s;
  }

  # Node backend (Express) proxied under /api/node/
  location /api/node/ {
    proxy_pass http://app_node:4000;      # no URI part
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_read_timeout 60s;

    # WebSocket friendliness
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }
}
